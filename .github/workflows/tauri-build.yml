name: Tauri Desktop App Build

on:
  push:
    branches: [main]
    tags: ['v*']  # Also build when pushing tags starting with 'v'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install Rust
      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      # Cache Rust dependencies
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
          
      # Install system dependencies for Linux
      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
          
      # Install pnpm
      - name: Install PNPM
        uses: pnpm/action-setup@v2
        with:
          version: latest
          
      # Install frontend dependencies
      - name: Install frontend dependencies
        run: pnpm install --frozen-lockfile

      # Build the Next.js frontend
      - name: Build frontend
        run: pnpm build

      # Build the Tauri app for the current platform
      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Only use release configurations when building from a tag
          tagName: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || '' }}
          releaseName: ${{ startsWith(github.ref, 'refs/tags/') && format('Release {0}', github.ref_name) || '' }}
          releaseBody: "See the assets to download this version and install."
          releaseDraft: ${{ startsWith(github.ref, 'refs/tags/') }}
          prerelease: false
          
      # Upload build artifacts for all builds - Fixed version
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4  # Updated from v3 to v4
        with:
          name: ${{ matrix.platform }}-build
          path: |
            src-tauri/target/release/bundle/dmg/*.dmg
            src-tauri/target/release/bundle/appimage/*.AppImage
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/deb/*.deb
          if-no-files-found: ignore

  # Optional: Create GitHub release when tag is pushed
  create-release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Get tag name
        id: get_tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.TAG }}
          name: Release ${{ steps.get_tag.outputs.TAG }}
          draft: false
          prerelease: false
          generate_release_notes: true
